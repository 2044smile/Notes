# 파이썬에서 제공하는 list, tuple, str, 그리고 모든 시퀀스형은 슬라이싱 연산을 지원한다.
# 고급 슬라이싱 형태의 사용법을 설명한다.

## 2.4.1 슬라이스와 범위 지정시에 마지막 항목이 포함되지 않는 이유

l = [10, 20, 30, 40, 50, 60]
l[:2]  # [10, 20]
l[2:]  # [30, 40, 50, 60]
l[:3]  # [10, 20, 30]
l[3:]  # [40, 50, 60]

## 2.4.2 슬라이스 객체
### slice(a, b, c) 객체를 생성한다.
### stride 보복 [::`it`]
### 파이썬은 s.__getitem__(slice(start, stop, step)) 을 호출한다.
s = 'bicycle'
s[::3]  # '`b`ic`y`cl`e`' -> bye
s[::-1]  # elcycib
s[::-2]  # eccb

## 2.4.3 다차원 슬라이싱과 생략 기호
### [] 연산자는 콤마로 구분해서 여러 개의 인덱스나 슬라이스를 가질 수 있다.
### [] 연산자는 __getitem__(), __setitem__() 특수 메서드는 a[i, j] 에 들어 있는 인덱스들을 튜플로 받는다.
### 파이썬에 내장된 시퀀스형은 1차원이므로 단 하나의 인덱스나 슬라이스만 지원하고, 튜플은 지원하지 않는다.

# my
lst = [1,2,3]
lst.__getitem__(0)  # 1
lst.__setitem__(-1, 99)  # [1, 2, 99]
lst.__iadd__([999])  # [1, 2, 99, 999]
lst.append(9999)  # [1, 2, 99, 999, 9999]

